!function(e){if("object"==typeof module&&"object"==typeof module.exports){var t=e(require,exports);void 0!==t&&(module.exports=t)}else"function"==typeof define&&define.amd&&define(["require","exports","./types.js"],e)}((function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const n=e("./types.js");console.log("[DOM] Loading DOM elements");const o=document.getElementById("config-input"),l=document.getElementById("save-button"),r=document.getElementById("calendar-container"),a=document.getElementById("timezone-select");console.log("[DOM] Main elements:",{configInput:!!o,saveButton:!!l,calendarContainer:!!r,timezoneSelect:!!a});const c=document.getElementById("color-picker-modal"),s=c.querySelector(".close"),i=document.getElementById("color-input"),d=document.getElementById("apply-color");console.log("[DOM] Modal elements:",{modal:!!c,closeBtn:!!s,colorInput:!!i,applyColorBtn:!!d}),console.log("[Libraries] Checking external dependencies:",{jsyaml:"undefined"!=typeof jsyaml,LZString:"undefined"!=typeof LZString,luxon:"undefined"!=typeof luxon});let m=null;function g(){c.style.display="none"}function u(e,t){return luxon.DateTime.fromISO(e,{zone:t}).startOf("day").toJSDate()}function p(e,t,o,l){const r=document.createElement("table");r.className="month-table";const a=document.createElement("thead"),c=document.createElement("tr");c.className="month-name-row";const s=document.createElement("th");s.colSpan=7,s.textContent=`${n.MONTH_NAMES[t]} ${e}`,c.appendChild(s),a.appendChild(c);const i=document.createElement("tr");i.className="weekday-row";const d=["Su","Mo","Tu","We","Th","Fr","Sa"];for(const e of d){const t=document.createElement("th");t.textContent=e,i.appendChild(t)}a.appendChild(i),r.appendChild(a);const m=document.createElement("tbody"),g=new Date(e,t,1).getDay(),u=new Date(e,t+1,0).getDate(),p=g+u,h=Math.ceil(p/7);let y=1;for(let n=0;n<h;n++){const r=document.createElement("tr");for(let a=0;a<7;a++){const c=document.createElement("td");if(7*n+a>=g&&y<=u){c.textContent=y.toString();const n=new Date(e,t,y);n.setHours(0,0,0,0);const r=[];for(let e=0;e<o.length;e++){const t=o[e];if(t.startDate&&t.endDate)n>=t.startDate&&n<=t.endDate&&(r.push(t.color),l.add(e));else if(t.dateObjects)for(const o of t.dateObjects)n.getTime()===o.getTime()&&(r.push(t.color),l.add(e))}r.length>0&&(c.style.background=f(r)),y++}else c.textContent="";r.appendChild(c)}m.appendChild(r)}return r.appendChild(m),r}function f(e){const t=100/e.length;return`linear-gradient(to bottom, ${e.map(((e,n)=>`${e} ${t*n}%, ${e} ${t*(n+1)}%`)).join(", ")})`}function h(){console.log("[getConfigFromURL] Checking for config parameter");const e=new URLSearchParams(window.location.search).get("config");if(console.log("[getConfigFromURL] Config param:",e?"Found":"Not found"),e)try{console.log("[getConfigFromURL] Decompressing config");const t=LZString.decompressFromEncodedURIComponent(e);console.log("[getConfigFromURL] Compressed JSON length:",t.length);const n=function(e){try{const t=`[${e}]`,n=JSON.parse(t),o={};return n[0]&&(o.years=n[0].map((e=>e+2024))),n[1]&&(o.highlightPeriods=n[1].map((e=>{if(Array.isArray(e)){if("number"==typeof e[0]&&"number"==typeof e[1]){const t=1e5*e[0],n=new Date(t).toISOString().split("T")[0]||"",o=e[1],l={start:n,end:new Date(t+24*o*60*60*1e3).toISOString().split("T")[0]||"",color:e[2]};return e[3]&&(l.label=e[3]),l}if(Array.isArray(e[0])){const t=1e5*e[0][0],n=e[0].slice(1),o=[new Date(t).toISOString().split("T")[0]||""];n.forEach((e=>{const t=new Date(new Date(o[o.length-1]).getTime()+864e5*e);o.push(t.toISOString().split("T")[0]||"")}));const l={dates:o,color:e[1]};return e[2]&&(l.label=e[2]),l}{const t={dates:[new Date(1e5*e[0]).toISOString().split("T")[0]||""],color:e[1]};return e[2]&&(t.label=e[2]),t}}return e}))),n[2]&&(o.timezone=n[2]),jsyaml.dump(o)}catch(e){return console.error("Error decompressing JSON:",e),null}}(t);return console.log("[getConfigFromURL] Decompression successful"),n}catch(e){const t=e;console.error("[getConfigFromURL] Error:",t),alert(`Error decoding configuration from URL: ${t.message}`)}return null}function y(e){const t=function(e){try{const t=jsyaml.load(e),n=[[],[]];if(t.years){const e=t.years.map((e=>e-2024));n[0]=e}if(t.highlightPeriods){const e=t.highlightPeriods.map((e=>{if(e.start&&e.end&&e.color){const t=Math.floor(new Date(e.start).getTime()/1e5),n=new Date(e.start),o=new Date(e.end),l=[t,Math.ceil((o.getTime()-n.getTime())/864e5),e.color];return e.label&&l.push(e.label),l}if(e.dates&&e.color){const t=e.dates.map((e=>Math.floor(new Date(e).getTime()/1e5))).sort(((e,t)=>e-t));if(1===t.length){const n=[t[0],e.color];return e.label&&n.push(e.label),n}{const n=t[0],o=t.slice(1).map((e=>(e-n)/864)),l=[[n,...o],e.color];return e.label&&l.push(e.label),l}}return e}));n[1]=e}return t.timezone&&"auto"!==t.timezone&&(n[2]=t.timezone),JSON.stringify(n).slice(1,-1)}catch(e){return console.error("Error compressing YAML:",e),null}}(e);if(t){const e=LZString.compressToEncodedURIComponent(t),n=`${window.location.protocol}//${window.location.host}${window.location.pathname}?config=${e}`;window.history.replaceState({path:n},"",n)}}o.addEventListener("keydown",(e=>{"#"===e.key&&setTimeout((()=>{m=o.selectionStart-1,c.style.display="block",i.focus()}),0)})),s.addEventListener("click",g),window.addEventListener("click",(e=>{e.target===c&&g()})),d.addEventListener("click",(()=>{const e=i.value;null!==m&&function(e){const t=o.value,n=t.slice(0,m),l=t.slice(m+1),r=n+e+l;o.value=r;const a=n.length+e.length;o.selectionStart=a,o.selectionEnd=a,o.focus(),m=null}(e),g()})),l.addEventListener("click",(()=>{console.log("[Save] Save button clicked");const e=o.value;console.log("[Save] Config input length:",e.length);try{console.log("[Save] Parsing YAML config");const t=jsyaml.load(e),o=t.years,l=t.highlightPeriods,c=function(){const e=a.value;return"auto"===e?luxon.DateTime.local().zoneName:e}();if(console.log("[Save] Years:",o),console.log("[Save] Periods:",l.length),console.log("[Save] Timezone:",c),!Array.isArray(o)||!Array.isArray(l))throw new Error("Invalid configuration format.");console.log("[Save] Generating calendar"),function(e,t,o){console.log("[generateCalendar] Starting calendar generation"),console.log("[generateCalendar] Years:",e),console.log("[generateCalendar] Periods:",t.length),console.log("[generateCalendar] Timezone:",o),r.innerHTML="";const l=t.map(((e,t)=>{const n={...e,order:t};return e.start&&(n.startDate=u(e.start,o)),e.end&&(n.endDate=u(e.end,o)),e.dates&&(n.dateObjects=e.dates.map((e=>u(e,o)))),n}));for(const t of e){const e=document.createElement("div");e.className="calendar";const o=document.createElement("h2");o.textContent=t.toString(),e.appendChild(o);const a=new Set,c=document.createElement("table");c.className="year-table";const s=document.createElement("tbody");for(const e of n.MONTH_ROWS){const n=document.createElement("tr");for(const o of e){const e=document.createElement("td");e.appendChild(p(t,o,l,a)),n.appendChild(e)}s.appendChild(n)}c.appendChild(s),e.appendChild(c);const i=Array.from(a).map((e=>l[e])).filter((e=>e.label));if(i.length>0){const t=document.createElement("div");t.className="legend";for(const e of i){const n=document.createElement("div");n.className="legend-item";const o=document.createElement("div");o.className="legend-color",o.style.backgroundColor=e.color;const l=document.createElement("span");l.textContent=e.label,n.appendChild(o),n.appendChild(l),t.appendChild(n)}e.appendChild(t)}r.appendChild(e)}}(o,l,c);const s={...t,timezone:c};console.log("[Save] Updating URL with config"),y(jsyaml.dump(s)),console.log("[Save] Save complete")}catch(e){const t=e;console.error("[Save] Error:",t),alert(`Error parsing configuration: ${t.message}`)}})),function(){console.log("[Init] Starting calendar initialization"),console.log("[Init] Current URL:",window.location.href),console.log("[Init] Search params:",window.location.search);const e=h();if(e){console.log("[Init] Config loaded from URL"),o.value=e;try{const t=jsyaml.load(e);t.timezone&&(console.log("[Init] Timezone from config:",t.timezone),a.value=t.timezone)}catch(e){console.error("[Init] Error parsing config from URL:",e)}}else{console.log("[Init] No URL config found, using default");const e=(new Date).getFullYear();console.log("[Init] Current year:",e),o.value=`years:\n  - ${e}\nhighlightPeriods:\n  - start: '${e}-12-01'\n    end: '${e}-12-31'\n    color: '#ffd700'  # gold\n    label: 'Festival Break'\n  - dates:\n      - '${e}-01-13'\n    color: '#ff6b6b'  # coral red\n    label: 'Important Day'\n`,console.log("[Init] Default config set in textarea")}console.log("[Init] Triggering save button click"),l.click(),console.log("[Init] Initialization complete")}()}));